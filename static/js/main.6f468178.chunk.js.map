{"version":3,"sources":["components/Header.js","utils/Api.js","utils/utils.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logoPath","alt","mestoApi","data","this","_url","link","_groupId","groupId","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_prepareData","itemId","cardId","name","body","JSON","stringify","about","avatarLink","avatar","authorization","Card","props","type","aria-label","card","onClick","onCardClick","likes","length","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","React","useEffect","getProfileData","result","catch","err","console","log","getInitalCards","onEditAvatar","onEditProfile","onAddPlace","map","key","_id","Footer","popupWithForm","isOpen","onClose","action","noValidate","title","children","buttonName","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","PopupWithForm","id","placeholder","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.6f468178.chunk.js","sourcesContent":["import React from 'react';\nimport logoPath from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header page__header\">\n      <img src={logoPath} alt=\"Логотип сайта - надпись Mesto\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import {\n  defaultUrl,\n  myGroup,\n  myToken,\n  defaultType\n} from \"./utils\";\n\nclass Api {\n  constructor(data) {\n    this._url = data.link;\n    this._groupId = data.groupId;\n    this._headers = data.headers;\n  }\n\n  _prepareData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitalCards() {\n    return fetch(`${this._url}/v1/${this._groupId}/cards`,\n      {\n        method: 'GET',\n        headers: this._headers\n      })\n      .then(this._prepareData);\n  }\n\n  getProfileData() {\n    return fetch(`${this._url}/v1/${this._groupId}/users/me`,\n      {\n        method: 'GET',\n        headers: this._headers\n      })\n      .then(this._prepareData);\n  }\n\n  dislike(itemId) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/likes/${itemId}`,\n      {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._prepareData);\n  }\n\n  like(itemId) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/likes/${itemId}`,\n      {\n        method: 'PUT',\n        headers: this._headers\n      }).then(this._prepareData);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}`,\n      {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._prepareData);;\n  }\n\n  createCard(name, link) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards`,\n      {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      }).then(this._prepareData);\n  }\n\n  updateProfile(name, about) {\n    return fetch(`${this._url}/v1/${this._groupId}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._prepareData);\n  }\n\n  updateAvatar(avatarLink) {\n    return fetch(`${this._url}/v1/${this._groupId}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    }).then(this._prepareData);\n  }\n}\n\nexport const mestoApi = new Api({\n  link: defaultUrl,\n  groupId: myGroup,\n  headers: {\n    authorization: myToken,\n    'Content-Type': defaultType\n  }\n});\n","export const defaultUrl = 'https://mesto.nomoreparties.co';\nexport const myToken = '072afc53-82e4-4aa4-b920-dd02ed4506a2';\nexport const myGroup = 'cohort-13';\nexport const defaultType = 'application/json';\n\n","import React from 'react';\n\nfunction Card(props) {\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  return (\n    <li className=\"element\">\n      <button className=\"element__delete-button\" type=\"button\" aria-label=\"Удалить фото места\"></button>\n      <img src={props.card.link} alt={props.card.name} className=\"element__image\" onClick={handleClick} />\n      <div className=\"element__text\">\n        <h2 className=\"element__image-title\">{props.card.name}</h2>\n        <div className=\"element__like-container\">\n          <button className=\"element__like-button\" type=\"button\" aria-label=\"Поставить фотографии лайк\"></button>\n          <span className=\"element__like-counter\">{props.card.likes.length}</span>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import React, { useState } from 'react';\nimport { mestoApi } from \"../utils/Api\";\nimport Card from \"./Card\";\n\nfunction Main(props) {\n  const [userName, setUserName] = useState('');\n  const [userDescription, setUserDescription] = useState('');\n  const [userAvatar, setUserAvatar] = useState('');\n  const [cards, setCards] = useState([]);\n\n  React.useEffect(() => {\n    mestoApi.getProfileData()\n      .then((result) => {\n        setUserName(result.name);\n        setUserDescription(result.about);\n        setUserAvatar(result.avatar);\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n\n  }, []);\n\n  React.useEffect(() => {\n    mestoApi.getInitalCards()\n      .then((data) => {\n        setCards(data);\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile page__profile\">\n        <div className=\"profile__avatar-container\">\n          <button className=\"profile__edit-avatar-button\" type=\"button\" aria-label=\"Сменить аватар\" onClick={props.onEditAvatar}></button>\n          <img src={userAvatar} alt=\"Фотография профиля\" className=\"profile__avatar\" />\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{userName}</h1>\n          <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать профиль\" onClick={props.onEditProfile}></button>\n          <p className=\"profile__occupation\">{userDescription}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить фото\" onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"gallery page__gallery\">\n        <ul className=\"elements\">\n          {cards.map((card) => {\n            return (\n              <Card card={card} key={card._id} onCardClick={props.onCardClick} />\n            );\n          })}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer page__footer\">\n            <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction popupWithForm(props) {\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n        <button\n          className=\"popup__close-button\"\n          type=\"button\"\n          aria-label=\"Закрыть окно\"\n          onClick={props.onClose}\n        ></button>\n        <form className={`form form_type_${props.name}`} name={props.name} action=\"#\" method=\"GET\" noValidate>\n          <h3 className=\"form__title\">{props.title}</h3>\n          {props.children}\n          <button className=\"form__submit-button\" type=\"submit\">{props.buttonName}</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default popupWithForm;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n  return (\n    <div className={`popup popup_type_photo ${props.card ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-button\" type=\"button\" aria-label=\"Закрыть окно\" onClick={props.onClose}></button>\n        <img src={props.card.link} alt={props.card.name} className=\"popup__image\" />\n        <h3 className=\"popup__image-title\">{props.card.name}</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return (\n    < >\n      <div className=\"page__container\">\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n        />\n        <Footer />\n      </div>\n      <PopupWithForm\n        name=\"profile-edit\"\n        title=\"Редактировать профиль\"\n        buttonName=\"Сохранить\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n      >\n        <label className=\"form__label\">\n          <input name=\"profilename\" id=\"name-input\" className=\"form__input form__input_type_name\" type=\"text\"\n            placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required />\n          <span id=\"name-input-error\" className=\"form__input-error\"></span>\n        </label>\n        <label className=\"form__label\">\n          <input name=\"info\" id=\"occupation-input\" className=\"form__input form__input_type_occupation\" type=\"text\"\n            placeholder=\"Профессия\" minLength=\"2\" maxLength=\"200\" required />\n          <span id=\"occupation-input-error\" className=\"form__input-error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"add-place\"\n        title=\"Новое место\"\n        buttonName=\"Сохранить\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n      >\n        <label className=\"form__label\">\n          <input id=\"placename-input\" name=\"name\" className=\"form__input form__input_type_place-name\" type=\"text\"\n            placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required />\n          <span id=\"placename-input-error\" className=\"form__input-error\"></span>\n        </label>\n        <label className=\"form__label\">\n          <input id=\"url-input\" name=\"link\" className=\"form__input form__input_type_link\" type=\"url\"\n            placeholder=\"Ссылка на картинку\" required />\n          <span id=\"url-input-error\" className=\"form__input-error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"edit-avatar\"\n        title=\"Обновить аватар\"\n        buttonName=\"Сохранить\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n      >\n        <label className=\"form__label\">\n          <input id=\"avatar-url-input\" name=\"avatarLink\" className=\"form__input form__input_type_link\" type=\"url\"\n            placeholder=\"Ссылка на аватар\" required />\n          <span id=\"avatar-url-input-error\" className=\"form__input-error\"></span>\n        </label>\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"confirm\"\n        title=\"Вы уверены?\"\n        buttonName=\"Да\"\n        isOpen={false}\n      ></PopupWithForm>\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n    </ >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}