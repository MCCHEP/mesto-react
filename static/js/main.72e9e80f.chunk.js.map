{"version":3,"sources":["utils/utils.js","utils/api.js","contexts/CurrentUserContext.js","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["isEmpty","obj","key","hasOwnProperty","mestoApi","data","this","_url","link","_groupId","groupId","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_prepareData","catch","err","console","log","itemId","isLiked","cardId","name","body","JSON","stringify","about","avatarLink","avatar","authorization","CurrentUserContext","React","createContext","Header","className","src","logoPath","alt","Card","props","currentUser","useContext","isOwn","card","owner","_id","likes","some","i","cardDeleteButtonClassName","cardLikeButtonClassName","type","aria-label","onClick","onCardDelete","onCardClick","onCardLike","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","Footer","popupWithForm","isOpen","onClose","onSubmit","action","noValidate","title","children","buttonName","EditProfilePopup","useState","setName","description","setDescription","useEffect","PopupWithForm","e","preventDefault","onUpdateUser","id","placeholder","minLength","maxLength","value","onChange","target","required","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","placeName","setPlaceName","placeLink","setPlaceLink","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getProfileData","getInitalCards","info","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","message","filter","element","updateProfile","updateAvatar","newUser","createCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.72e9e80f.chunk.js","sourcesContent":["export const defaultUrl = 'https://mesto.nomoreparties.co';\nexport const myToken = '072afc53-82e4-4aa4-b920-dd02ed4506a2';\nexport const myGroup = 'cohort-13';\nexport const defaultType = 'application/json';\n\nexport function isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key))\n      return false;\n  }\n  return true;\n}\n","import {\n  defaultUrl,\n  myGroup,\n  myToken,\n  defaultType\n} from \"./utils\";\n\nclass Api {\n  constructor(data) {\n    this._url = data.link;\n    this._groupId = data.groupId;\n    this._headers = data.headers;\n  }\n\n  _prepareData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitalCards() {\n    return fetch(`${this._url}/v1/${this._groupId}/cards`,\n      {\n        method: 'GET',\n        headers: this._headers\n      })\n      .then(this._prepareData)\n      .catch(err => console.log(`Загрузка карточек с сервера: ${err}`));;\n  }\n\n  getProfileData() {\n    return fetch(`${this._url}/v1/${this._groupId}/users/me`,\n      {\n        method: 'GET',\n        headers: this._headers\n      })\n      .then(this._prepareData)\n      .catch(err => console.log(`Загрузка информации о пользователе: ${err}`));\n  }\n\n  changeLikeCardStatus(itemId, isLiked) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/likes/${itemId}`,\n      {\n        method: isLiked ? 'PUT' : 'DELETE',\n        headers: this._headers\n      }).then(this._prepareData)\n      .catch(err => console.log(`Передача информации о лайке/дизлайке: ${err}`));;\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}`,\n      {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._prepareData)\n      .catch(err => console.log(`Удаление карточки с сервера: ${err}`));;\n  }\n\n  createCard(name, link) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards`,\n      {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      }).then(this._prepareData)\n      .catch(err => console.log(`Добавление карточки на сервер: ${err}`));;\n  }\n\n  updateProfile(name, about) {\n    return fetch(`${this._url}/v1/${this._groupId}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._prepareData)\n      .catch(err => console.log(`Обновление профиля пользователя: ${err}`));;\n  }\n\n  updateAvatar(avatarLink) {\n    return fetch(`${this._url}/v1/${this._groupId}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    }).then(this._prepareData)\n      .catch(err => console.log(`Обновление аватара: ${err}`));;\n  }\n}\n\nexport const mestoApi = new Api({\n  link: defaultUrl,\n  groupId: myGroup,\n  headers: {\n    authorization: myToken,\n    'Content-Type': defaultType\n  }\n});\n","import React from 'react';\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport logoPath from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header page__header\">\n      <img src={logoPath} alt=\"Логотип сайта - надпись Mesto\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = props.card.owner._id === currentUser._id;\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardDeleteButtonClassName = (\n    `element__delete-button ${isOwn ? 'element__delete-button_visible' : 'element__delete-button_hidden'}`\n  );\n  const cardLikeButtonClassName = (\n    `element__like-button ${isLiked ? 'element__like-button_active' : ''}`\n  );\n\n  const handleClick = () => {\n    props.onCardClick(props.card);\n  }\n\n  const handleLikeClick = () => {\n    props.onCardLike(props.card);\n  }\n\n  const handleDeleteClick = () => {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <li className=\"element\">\n      <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить фото места\" onClick={handleDeleteClick}></button>\n      <img src={props.card.link} alt={props.card.name} className=\"element__image\" onClick={handleClick} />\n      <div className=\"element__text\">\n        <h2 className=\"element__image-title\">{props.card.name}</h2>\n        <div className=\"element__like-container\">\n          <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\" aria-label=\"Поставить фотографии лайк\"></button>\n          <span className=\"element__like-counter\">{props.card.likes.length}</span>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from \"./Card\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile page__profile\">\n        <div className=\"profile__avatar-container\">\n          <button className=\"profile__edit-avatar-button\" type=\"button\" aria-label=\"Сменить аватар\" onClick={props.onEditAvatar}></button>\n          <img src={currentUser.avatar} alt=\"Фотография профиля\" className=\"profile__avatar\" />\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать профиль\" onClick={props.onEditProfile}></button>\n          <p className=\"profile__occupation\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить фото\" onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"gallery page__gallery\">\n        <ul className=\"elements\">\n          {props.cards.map((card) => <Card card={card} key={card._id} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />)}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer page__footer\">\n            <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction popupWithForm(props) {\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n        <button\n          className=\"popup__close-button\"\n          type=\"button\"\n          aria-label=\"Закрыть окно\"\n          onClick={props.onClose}\n        ></button>\n        <form className={`form form_type_${props.name}`} name={props.name} onSubmit={props.onSubmit} action=\"#\" method=\"GET\" noValidate>\n          <h3 className=\"form__title\">{props.title}</h3>\n          {props.children}\n          <button className=\"form__submit-button\" type=\"submit\">{props.buttonName}</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default popupWithForm;\n","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  }\n  const handleSubmit = (e) => {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser(name, description);\n  }\n\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      name=\"profile-edit\"\n      title=\"Редактировать профиль\"\n      buttonName=\"Сохранить\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <label className=\"form__label\">\n        <input name=\"profilename\" id=\"name-input\" className=\"form__input form__input_type_name\" type=\"text\"\n          placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" value={name} onChange={handleNameChange} required />\n        <span id=\"name-input-error\" className=\"form__input-error\"></span>\n      </label>\n      <label className=\"form__label\">\n        <input name=\"info\" id=\"occupation-input\" className=\"form__input form__input_type_occupation\" type=\"text\"\n          placeholder=\"Профессия\" minLength=\"2\" maxLength=\"200\" value={description} onChange={handleDescriptionChange} required />\n        <span id=\"occupation-input-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.onUpdateAvatar(avatarRef.current.value);\n    };\n\n    return (\n        <PopupWithForm\n            name=\"edit-avatar\"\n            title=\"Обновить аватар\"\n            buttonName=\"Сохранить\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n            <label className=\"form__label\">\n                <input ref={avatarRef} id=\"avatar-url-input\" name=\"avatarLink\" className=\"form__input form__input_type_link\" type=\"url\"\n                    placeholder=\"Ссылка на аватар\" required />\n                <span id=\"avatar-url-input-error\" className=\"form__input-error\"></span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n    const [placeName, setPlaceName] = React.useState('');\n    const [placeLink, setPlaceLink] = React.useState('');\n\n    const handlePlaceNameChange = (e) => {\n        setPlaceName(e.target.value);\n    }\n    const handlePlaceLinkChange = (e) => {\n        setPlaceLink(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onAddPlace(placeName, placeLink);\n    }\n\n    return (\n        <PopupWithForm\n            name=\"add-place\"\n            title=\"Новое место\"\n            buttonName=\"Сохранить\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n            <label className=\"form__label\">\n                <input id=\"placename-input\" name=\"name\" className=\"form__input form__input_type_place-name\" type=\"text\"\n                    placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" value={placeName} onChange={handlePlaceNameChange} required />\n                <span id=\"placename-input-error\" className=\"form__input-error\"></span>\n            </label>\n            <label className=\"form__label\">\n                <input id=\"url-input\" name=\"link\" className=\"form__input form__input_type_link\" type=\"url\"\n                    placeholder=\"Ссылка на картинку\" value={placeLink} onChange={handlePlaceLinkChange} required />\n                <span id=\"url-input-error\" className=\"form__input-error\"></span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\nimport { isEmpty } from \"../utils/utils\";\n\nfunction ImagePopup(props) {\n  return (\n    <div className={`popup popup_type_photo ${!isEmpty(props.card) && 'popup_opened'}`}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-button\" type=\"button\" aria-label=\"Закрыть окно\" onClick={props.onClose}></button>\n        <img src={props.card ? props.card.link : ''} alt={props.card ? props.card.name : ''} className=\"popup__image\" />\n        <h3 className=\"popup__image-title\">{props.card ? props.card.name : ''}</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React, { useState } from 'react';\nimport { mestoApi } from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n  const handleUpdateUser = (name, description) => {\n    mestoApi.updateProfile(name, description)\n      .then(data => setCurrentUser(data))\n      .then(closeAllPopups)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  const handleUpdateAvatar = (avatarLink) => {\n    mestoApi.updateAvatar(avatarLink)\n      .then(newUser => setCurrentUser(newUser))\n      .then(closeAllPopups)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n  const handleCardLike = (card) => {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    mestoApi.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    });\n  }\n  const handleCardDelete = (card) => {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    mestoApi.deleteCard(card._id).then((data) => {\n      if (data.message === 'Пост удалён') {\n        const newCards = cards.filter(element => element !== card);\n        setCards(newCards);\n      }\n    });\n  }\n  const handleAddPlace = (name, link) => {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    mestoApi.createCard(name, link)\n      .then((newCard) => {\n        setCards([...cards, newCard]);\n      })\n      .then(closeAllPopups)\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });;\n  }\n\n  React.useEffect(() => {\n    Promise.all([mestoApi.getProfileData(), mestoApi.getInitalCards()])\n      .then(([info, data]) => {\n        setCurrentUser(info);\n        setCards(data);\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }, []);\n\n  return (\n    < >\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page__container\">\n          <Header />\n          <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n          <Footer />\n        </div>\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n          isOpen={false}\n        />\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </CurrentUserContext.Provider>\n    </ >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}